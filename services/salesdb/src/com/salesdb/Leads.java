/*Copyright (c) 2015-2016 wavemaker-com All Rights Reserved.This software is the confidential and proprietary information of wavemaker-com You shall not disclose such Confidential Information and shall use it only in accordance with the terms of the source code license agreement you entered into with wavemaker-com*/

package com.salesdb;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;


import java.util.Arrays;

import javax.persistence.Transient;
import javax.persistence.CascadeType;





/**
 * Leads generated by hbm2java
 */
@Entity
@Table(name="LEADS"
    ,schema="PUBLIC"
    ,catalog="PUBLIC"
)
public class Leads  implements java.io.Serializable {


     private Integer id;
     private Customers customers;
     private Date entryDate;
     private Set<Quotes> quoteses = new HashSet<Quotes>(0);

    public Leads() {
    }

	
    public Leads(Date entryDate) {
        this.entryDate = entryDate;
    }
    public Leads(Customers customers, Date entryDate, Set<Quotes> quoteses) {
       this.customers = customers;
       this.entryDate = entryDate;
       this.quoteses = quoteses;
    }

     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="ID", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="CUSTOMER_ID")
    public Customers getCustomers() {
        return this.customers;
    }
    
    public void setCustomers(Customers customers) {
        this.customers = customers;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="ENTRY_DATE", nullable=false, length=10)
    public Date getEntryDate() {
        return this.entryDate;
    }
    
    public void setEntryDate(Date entryDate) {
        this.entryDate = entryDate;
    }

@OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="leads")
    public Set<Quotes> getQuoteses() {
        return this.quoteses;
    }
    
    public void setQuoteses(Set<Quotes> quoteses) {
        this.quoteses = quoteses;
    }



public boolean equals(Object o) {
         if (this == o)
         return true;
		 if ( (o == null ) )
		 return false;
		 if ( !(o instanceof Leads) )
		 return false;

		 Leads that = ( Leads ) o;

		 return ( (this.getId()==that.getId()) || ( this.getId()!=null && that.getId()!=null && this.getId().equals(that.getId()) ) );

   }

   public int hashCode() {
         int result = 17;

         result = 37 * result + ( getId() == null ? 0 : this.getId().hashCode() );

         return result;
     }


}

